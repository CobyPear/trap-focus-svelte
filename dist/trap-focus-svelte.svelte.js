import{listen as t}from"svelte/internal";let e=[];function o(o,n=1){let c=0;const u=t(document,"keydown",(t=>c=t.shiftKey&&"Tab"==t.key));function f(){const t=[...o.querySelectorAll("*")].filter((t=>t.tabIndex>=0));return[t.at(0)??o,t.at(-1)??o]}let s;function r(){e.push(o),s=document.activeElement,f().at(0).focus()}function i(){e=e.filter((t=>t!=o)),s.focus()}n&&r();const a=t=>e.at(-1)?.contains(t),l=t(o,"focusout",(t=>{if(a(o)){const[e,o]=f();t.target==e&&c?o.focus():t.target!=o||c||e.focus()}})),d=t(document,"focusin",(t=>{if(a(o)&&!a(t.target)){const[t,e]=f();(c?e:t).focus()}}));return{update(t){t?r():i()},destroy(){u(),d(),l(),i()}}}export{o as trapFocus};
